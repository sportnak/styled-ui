webpackJsonp([16],{1260:function(t,n,o){var e=o(5),r=o(75),a=o(550).PageRenderer;a.__esModule&&(a=a.default);var p=r({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(1278)}},componentWillMount:function(){},render:function(){return e.createElement(a,Object.assign({},this.props,{content:this.state.content}))}});p.__catalog_loader__=!0,t.exports=p},1278:function(t,n){t.exports='Most Bootstrap 4 components can be used in existing projects, powered by Reactstrap.\n\nBootstrap components expect an opinionated CSS reset to be present. When using a component from this library, it will be automatically wrapped in an outer container element with the CSS reset styles applied to it. If the component contains other Bootstrap components (e.g. a group of form elements), only the outer-most component will be wrapped.\n\n## How to use\n\nImport the scoped Bootstrap stylesheet into your application:\n```\nimport { Bootstrap } from \'@faithlife/styled-ui\';\nimport \'@faithlife/styled-ui/dist/main.css\';\n\nconst MyComponent = props => <Button color="primary">primary</Button>;\n\n```\n\nSee the [Reactstrap](https://reactstrap.github.io/) documentation for the component documentation.\n\n## Examples\n\n```hint\nClick the <> on the right to view the sample source.\n```\n\n### Buttons\n\n```react\nshowSource: false\n---\n<div>\n\t<RowWithMargin>\n\t\t<Button className="m-1" color="primary">Primary</Button>\n\t\t<Button className="m-1" color="primary" outline>Outline</Button>\n\t\t<Button className="m-1" color="link">link</Button>\n\t</RowWithMargin>\n\t<RowWithMargin>\n\t\t<div><Button className="m-1" color="primary" size="sm">Small</Button></div>\n\t\t<div><Button className="m-1" color="primary" size="md">Medium</Button></div>\n\t\t<div><Button className="m-1" color="primary" size="lg">Large</Button></div>\n\t</RowWithMargin>\n</div>\n```\n\n### Button with Dropdown\n\n```react\nshowSource: false\nstate: { isOpen: false }\n---\n<div>\n<ButtonDropdown isOpen={state.isOpen} toggle={() => setState({ isOpen: !state.isOpen })}>\n\t<Button id="caret" color="primary">Split Button</Button>\n\t<DropdownToggle caret color="primary" />\n\t<DropdownMenu>\n\t\t<DropdownItem header>Header</DropdownItem>\n\t\t<DropdownItem disabled>Action</DropdownItem>\n\t\t<DropdownItem>Another Action</DropdownItem>\n\t\t<DropdownItem divider/>\n\t\t<DropdownItem>Another Action</DropdownItem>\n\t</DropdownMenu>\n</ButtonDropdown>\n</div>\n```\n\n## Modal\n\n```react\nshowSource: false\nstate: { modal: false }\n---\n<div>\n\t<Button color="danger" onClick={() => setState({ modal: !state.modal })}>CLICK ME</Button>\n\t<Modal isOpen={state.modal} toggle={() => setState({ modal: !state.modal })}>\n\t\t<ModalHeader toggle={() => setState({ modal: !state.modal })}>Modal title</ModalHeader>\n\t\t<ModalBody>\n\t\tLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\t\t</ModalBody>\n\t\t<ModalFooter>\n\t\t<Button color="primary" onClick={() => setState({ modal: !state.modal })}>Do Something</Button>{\' \'}\n\t\t<Button color="secondary" onClick={() => setState({ modal: !state.modal })}>Cancel</Button>\n\t\t</ModalFooter>\n\t</Modal>\n</div>\n```\n\n## Alerts\n\n```react\nshowSource: false\n---\n<div>\n\t<Alert color="primary">\n\t\tThis is a primary alert \u2014 check it out!\n\t</Alert>\n\t<Alert color="secondary">\n\t\tThis is a secondary alert \u2014 check it out!\n\t</Alert>\n\t<Alert color="success">\n\t\tThis is a success alert \u2014 check it out!\n\t</Alert>\n\t<Alert color="danger">\n\t\tThis is a danger alert \u2014 check it out!\n\t</Alert>\n\t<Alert color="warning">\n\t\tThis is a warning alert \u2014 check it out!\n\t</Alert>\n\t<Alert color="info">\n\t\tThis is a info alert \u2014 check it out!\n\t</Alert>\n\t<Alert color="light">\n\t\tThis is a light alert \u2014 check it out!\n\t</Alert>\n\t<Alert color="dark">\n\t\tThis is a dark alert \u2014 check it out!\n\t</Alert>\n</div>\n```\n\n## Navbar\n\n```react\nshowSource: false\nstate: { isOpen: false }\n---\n <div>\n\t<Navbar color="light" light expand="md">\n\t\t<NavbarBrand href="/">reactstrap</NavbarBrand>\n\t\t<NavbarToggler onClick={() => setState({ isOpen: !state.isOpen})} />\n\t\t<Collapse isOpen={state.isOpen} navbar>\n\t\t<Nav className="ml-auto" navbar>\n\t\t\t<NavItem>\n\t\t\t<NavLink href="/components/">Components</NavLink>\n\t\t\t</NavItem>\n\t\t\t<NavItem>\n\t\t\t<NavLink href="https://github.com/reactstrap/reactstrap">GitHub</NavLink>\n\t\t\t</NavItem>\n\t\t\t<UncontrolledDropdown nav inNavbar>\n\t\t\t<DropdownToggle nav caret>\n\t\t\t\tOptions\n\t\t\t</DropdownToggle>\n\t\t\t<DropdownMenu right>\n\t\t\t\t<DropdownItem>\n\t\t\t\tOption 1\n\t\t\t\t</DropdownItem>\n\t\t\t\t<DropdownItem>\n\t\t\t\tOption 2\n\t\t\t\t</DropdownItem>\n\t\t\t\t<DropdownItem divider />\n\t\t\t\t<DropdownItem>\n\t\t\t\tReset\n\t\t\t\t</DropdownItem>\n\t\t\t</DropdownMenu>\n\t\t\t</UncontrolledDropdown>\n\t\t</Nav>\n\t\t</Collapse>\n\t</Navbar>\n</div>\n```\n\n## Carousel\n\n```react\nshowSource: false\n---\n<div>\n\t<CarouselDemo />\n</div>\n```\n\n```react\nshowSource: flase\n---\n<Row>\n\t<div className="text-center">0%</div>\n\t<Progress />\n\t<div className="text-center">25%</div>\n\t<Progress value="25" />\n\t<div className="text-center">50%</div>\n\t<Progress value={50} />\n\t<div className="text-center">75%</div>\n\t<Progress value={75} />\n\t<div className="text-center">100%</div>\n\t<Progress value="100" />\n\t<div className="text-center">Multiple bars</div>\n\t<Progress multi>\n\t\t<Progress bar value="15" />\n\t\t<Progress bar color="success" value="30" />\n\t\t<Progress bar color="info" value="25" />\n\t\t<Progress bar color="warning" value="20" />\n\t\t<Progress bar color="danger" value="5" />\n\t</Progress>\n</Row>\n```\n\n## List group\n\n```react\nshowSource: false\n---\n<div>\n\t<ListGroup>\n\t\t<ListGroupItem>Cras justo odio</ListGroupItem>\n\t\t<ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n\t\t<ListGroupItem>Morbi leo risus</ListGroupItem>\n\t\t<ListGroupItem>Porta ac consectetur ac</ListGroupItem>\n\t\t<ListGroupItem>Vestibulum at eros</ListGroupItem>\n\t</ListGroup>\n</div>\n```\n\n## Input Groups\n\n```react\nshowSource: false\nstate: { isOpen: false }\n---\n <div>\n\t<InputGroup>\n\t\t<InputGroupAddon addonType="prepend">@</InputGroupAddon>\n\t\t<Input placeholder="username" />\n\t</InputGroup>\n\t<br />\n\t<InputGroup>\n\t\t<InputGroupAddon addonType="prepend">\n\t\t\t<InputGroupText>\n\t\t\t\t<Input addon type="checkbox" aria-label="Checkbox for following text input" />\n\t\t\t</InputGroupText>\n\t\t</InputGroupAddon>\n\t\t<Input placeholder="Check it out" />\n\t</InputGroup>\n\t<br />\n\t<InputGroup>\n\t\t<Input placeholder="username" />\n\t\t<InputGroupAddon addonType="append">@example.com</InputGroupAddon>\n\t</InputGroup>\n\t<br />\n\t<InputGroup>\n\t\t<InputGroupAddon addonType="prepend">\n\t\t\t<InputGroupText>$</InputGroupText>\n\t\t\t<InputGroupText>$</InputGroupText>\n\t\t</InputGroupAddon>\n\t\t<Input placeholder="Dolla dolla billz yo!" />\n\t\t<InputGroupAddon addonType="append">\n\t\t\t<InputGroupText>$</InputGroupText>\n\t\t\t<InputGroupText>$</InputGroupText>\n\t\t</InputGroupAddon>\n\t</InputGroup>\n\t<br />\n\t<InputGroup>\n\t\t<InputGroupAddon addonType="prepend">$</InputGroupAddon>\n\t\t<Input placeholder="Amount" type="number" step="1" />\n\t\t<InputGroupAddon addonType="append">.00</InputGroupAddon>\n\t</InputGroup>\n\t\t\t\t<br />\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<InputGroupAddon addonType="prepend"><Button>I\'m a button</Button></InputGroupAddon>\n\t\t\t\t\t<Input />\n\t\t\t\t</InputGroup>\n\t\t\t\t<br />\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<Input />\n\t\t\t\t\t<InputGroupButtonDropdown addonType="append" isOpen={state.dropdownOpen} toggle={() => setState({ dropdownOpen: !state.dropdownOpen})}>\n\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\tButton Dropdown\n\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t<DropdownItem header>Header</DropdownItem>\n\t\t\t\t\t\t\t<DropdownItem disabled>Action</DropdownItem>\n\t\t\t\t\t\t\t<DropdownItem>Another Action</DropdownItem>\n\t\t\t\t\t\t\t<DropdownItem divider />\n\t\t\t\t\t\t\t<DropdownItem>Another Action</DropdownItem>\n\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t</InputGroupButtonDropdown>\n\t\t\t\t</InputGroup>\n\t\t\t\t<br />\n\t\t\t\t<InputGroup>\n\t\t\t\t\t<InputGroupButtonDropdown addonType="prepend" isOpen={state.splitButtonOpen} toggle={() => setState({ splitButtonOpen: !state.splitButtonOpen}) }>\n\t\t\t\t\t\t<Button outline>Split Button</Button>\n\t\t\t\t\t\t<DropdownToggle split outline />\n\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t<DropdownItem header>Header</DropdownItem>\n\t\t\t\t\t\t\t<DropdownItem disabled>Action</DropdownItem>\n\t\t\t\t\t\t\t<DropdownItem>Another Action</DropdownItem>\n\t\t\t\t\t\t\t<DropdownItem divider />\n\t\t\t\t\t\t\t<DropdownItem>Another Action</DropdownItem>\n\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t</InputGroupButtonDropdown>\n\t\t\t\t\t<Input placeholder="and..." />\n\t\t\t\t\t<InputGroupAddon addonType="append"><Button color="secondary">I\'m a button</Button></InputGroupAddon>\n\t\t\t\t</InputGroup>\n</div>\n```\n\n## Forms\n\n```react\nshowSource: false\n---\n<div>\n\t<Form>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCheckbox">Checkboxes</Label>\n\t\t\t<div>\n\t\t\t\t<CustomInput type="checkbox" id="exampleCustomCheckbox" label="Check this custom checkbox" />\n\t\t\t\t<CustomInput type="checkbox" id="exampleCustomCheckbox2" label="Or this one" />\n\t\t\t\t<CustomInput type="checkbox" id="exampleCustomCheckbox3" label="But not this disabled one" disabled />\n\t\t\t</div>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCheckbox">Radios</Label>\n\t\t\t<div>\n\t\t\t\t<CustomInput type="radio" id="exampleCustomRadio" name="customRadio" label="Select this custom radio" />\n\t\t\t\t<CustomInput type="radio" id="exampleCustomRadio2" name="customRadio" label="Or this one" />\n\t\t\t\t<CustomInput type="radio" id="exampleCustomRadio3" label="But not this disabled one" disabled />\n\t\t\t</div>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCheckbox">Inline</Label>\n\t\t\t<div>\n\t\t\t\t<CustomInput type="checkbox" id="exampleCustomInline" label="An inline custom input" inline />\n\t\t\t\t<CustomInput type="checkbox" id="exampleCustomInline2" label="and another one" inline />\n\t\t\t</div>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCustomSelect">Custom Select</Label>\n\t\t\t<CustomInput type="select" id="exampleCustomSelect" name="customSelect">\n\t\t\t\t<option value="">Select</option>\n\t\t\t\t<option>Value 1</option>\n\t\t\t\t<option>Value 2</option>\n\t\t\t\t<option>Value 3</option>\n\t\t\t\t<option>Value 4</option>\n\t\t\t\t<option>Value 5</option>\n\t\t\t</CustomInput>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCustomMutlipleSelect">Custom Multiple Select</Label>\n\t\t\t<CustomInput type="select" id="exampleCustomMutlipleSelect" name="customSelect" multiple>\n\t\t\t\t<option value="">Select</option>\n\t\t\t\t<option>Value 1</option>\n\t\t\t\t<option>Value 2</option>\n\t\t\t\t<option>Value 3</option>\n\t\t\t\t<option>Value 4</option>\n\t\t\t\t<option>Value 5</option>\n\t\t\t</CustomInput>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCustomSelectDisabled">Custom Select Disabled</Label>\n\t\t\t<CustomInput type="select" id="exampleCustomSelectDisabled" name="customSelect" disabled>\n\t\t\t\t<option value="">Select</option>\n\t\t\t\t<option>Value 1</option>\n\t\t\t\t<option>Value 2</option>\n\t\t\t\t<option>Value 3</option>\n\t\t\t\t<option>Value 4</option>\n\t\t\t\t<option>Value 5</option>\n\t\t\t</CustomInput>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCustomMutlipleSelectDisabled">Custom Multiple Select Disabled</Label>\n\t\t\t<CustomInput type="select" id="exampleCustomMutlipleSelectDisabled" name="customSelect" multiple disabled>\n\t\t\t\t<option value="">Select</option>\n\t\t\t\t<option>Value 1</option>\n\t\t\t\t<option>Value 2</option>\n\t\t\t\t<option>Value 3</option>\n\t\t\t\t<option>Value 4</option>\n\t\t\t\t<option>Value 5</option>\n\t\t\t</CustomInput>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCustomFileBrowser">File Browser</Label>\n\t\t\t<CustomInput type="file" id="exampleCustomFileBrowser" name="customFile" />\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCustomFileBrowser">File Browser with Custom Label</Label>\n\t\t\t<CustomInput type="file" id="exampleCustomFileBrowser" name="customFile" label="Yo, pick a file!" />\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleCustomFileBrowser">File Browser Disabled</Label>\n\t\t\t<CustomInput type="file" id="exampleCustomFileBrowser" name="customFile" disabled />\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleEmail">Input without validation</Label>\n\t\t\t<Input />\n\t\t\t<FormFeedback>You will not be able to see this</FormFeedback>\n\t\t\t<FormText>Example help text that remains unchanged.</FormText>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="exampleEmail">Valid input</Label>\n\t\t\t<Input valid />\n\t\t\t<FormFeedback valid>Sweet! that name is available</FormFeedback>\n\t\t\t<FormText>Example help text that remains unchanged.</FormText>\n\t\t</FormGroup>\n\t\t<FormGroup>\n\t\t\t<Label for="examplePassword">Invalid input</Label>\n\t\t\t<Input invalid />\n\t\t\t<FormFeedback>Oh noes! that name is already taken</FormFeedback>\n\t\t\t<FormText>Example help text that remains unchanged.</FormText>\n\t\t</FormGroup>\n\t</Form>\n</div>\n```\n\n## Layout Grid\n```react\n<LayoutGridDemo>\n\t<Container>\n\t\t<Row>\n\t\t\t<Col>.col</Col>\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col>.col</Col>\n\t\t\t<Col>.col</Col>\n\t\t\t<Col>.col</Col>\n\t\t\t<Col>.col</Col>\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col xs="3">.col-3</Col>\n\t\t\t<Col xs="auto">.col-auto - variable width content</Col>\n\t\t\t<Col xs="3">.col-3</Col>\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col xs="6">.col-6</Col>\n\t\t\t<Col xs="6">.col-6</Col>\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col xs="6" sm="4">.col-6 .col-sm-4</Col>\n\t\t\t<Col xs="6" sm="4">.col-6 .col-sm-4</Col>\n\t\t\t<Col sm="4">.col-sm-4</Col>\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col sm={{ size: 6, order: 2, offset: 1 }}>.col-sm-6 .col-sm-order-2 .col-sm-offset-2</Col>\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col sm="12" md={{ size: 8, offset: 2 }}>.col-sm-12 .col-md-6 .col-md-offset-3</Col>\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col sm={{ size: \'auto\', offset: 1 }}>.col-sm .col-sm-offset-1</Col>\n\t\t\t<Col sm={{ size: \'auto\', offset: 1 }}>.col-sm .col-sm-offset-1</Col>\n\t\t</Row>\n\t</Container>\n</LayoutGridDemo>\n```\n'}});
//# sourceMappingURL=16.c6f9fa31.chunk.js.map